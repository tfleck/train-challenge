name: Deploy subflow
on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
        description: The environment to deploy to (e.g., Development, Staging, Production).
    secrets:
      AZURE_CLIENT_ID:
        required: true
      AZURE_TENANT_ID:
        required: true
      AZURE_SUBSCRIPTION_ID:
        required: true
      RESOURCE_GROUP_NAME:
        required: true
        description: The name of the Azure resource group to deploy to.

env:
  AZURE_FUNCTIONAPP_PACKAGE_PATH: 'function-app'       # set this to the path to your function app project, defaults to the repository root


jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install poetry
        run: |
          pipx install poetry
          pipx inject poetry poetry-plugin-export
      
      - name: Setup Python Environment
        uses: actions/setup-python@v5
        id: setup-python
        with:
          python-version-file: 'pyproject.toml' # Read python version from a file pyproject.toml
          cache: 'poetry' # caching poetry dependencies
          cache-dependency-path: 'poetry.lock' # caching poetry dependencies


      - name: Get Python Major/Minor Version
        id: get-python-version
        # Extract the major and minor version from the full version string
        # and set it as an environment variable
        # Example: 3.10.4 -> 3.10
        run: |
          echo "python-version=$(echo ${{steps.setup-python.outputs.python-version}} | sed 's/\.[^.]*$//')" >> "$GITHUB_OUTPUT"

      - name: Azure login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Bicep Deployment
        uses: azure/bicep-deploy@v2
        id: bicep-deploy
        with:
          type: deploymentStack
          operation: create
          name: Development
          location: eastus
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          scope: resourceGroup
          resource-group-name: ${{ secrets.RESOURCE_GROUP_NAME }}
          template-file: ./bicep/main.bicep
          action-on-unmanage-resources: delete
          deny-settings-mode: none
          parameters: '{
            "pythonVersion": "${{ steps.get-python-version.outputs.python-version }}",
            "deployClientId": "${{ secrets.AZURE_CLIENT_ID }}",
            "githubAuthClientId": "${{ secrets.GH_AUTH_CLIENT_ID }}",
            "githubAuthClientSecret": "${{ secrets.GH_AUTH_CLIENT_SECRET }}"
          }'

      - name: 'Resolve Project Dependencies Using Pip'
        shell: bash
        run: |
          pushd '.'
          python -m pip install --upgrade pip
          poetry export --without-hashes --with api --format=requirements.txt > ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}/requirements.txt
          pushd './${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}'
          pip install -r requirements.txt --target=".python_packages/lib/site-packages"
          pip install ../. --target=".python_packages/lib/site-packages"
          echo "trainchallenge" >> requirements.txt
          popd

      - name: 'Run Azure Functions Action'
        uses: Azure/functions-action@v1
        with:
          app-name: ${{ steps.bicep-deploy.outputs.functionAppName }}
          package: ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}
          respect-funcignore: true